#//////////////////////////////////////////////////////////////////////////////////
# S_Consoleモジュール
# --------------------- インクルードされるクラス -----------------------------------
#   System_consoleクラス
# ---------------------------- 内容説明 ------------------------------------------
#   System_consoleクラスの中から、コンソール出力が必要な処理の部分を集めた関数群
#     人の先手、後手を決める処理
#     ボードの表示
#//////////////////////////////////////////////////////////////////////////////////

module S_Console
  #################################################################################
  # 処理内容：
  #  人の先手、後手を決める
  #################################################################################
  def select_human_turn
    puts '**************************************'
    puts '  先手、後手　どちらで開始しますか？  '
    puts '======================================'
    puts '         Black  ○　先手:  B           '
    puts '         White  ●  後手:  W           '
    puts '======================================'
    print '==> '

    while 1
      turn = gets.chomp
      if (turn == 'B') || (turn == 'W') then
        break
      else
        print 'BかWで入力してください ==> '
      end
    end

    return turn
  end

  #################################################################################
  # 処理内容：
  #  パスである旨を表示し、リターンキーで処理を進めさせる
  #################################################################################
  def print_pass
    puts '=================================================='
    puts self.get_player.instance_of?(Human_console) ? '人は' : 'コンピュータは'
    puts ' パスです　リターンキーを押して次に進んでください '
    puts '=================================================='
    print '==> '

    while 1
      message = gets
      if message == "\n" then
        break
      else
        print 'リターンキーを押してください ==> '
      end
    end
  end

  #################################################################################
  # 処理内容：
  #  @boardを出力する
  #################################################################################
  def print_board
    puts '****** ' '現在の手数： ' + self.turn.to_s + ' ******'  
    if @turn != 0 then
      print '******↓ '
      print self.get_player.instance_of?(Human_console) ? '人' : 'コンピュータ'
      print '(' + ['','a','b','c','d','e','f','g','h'][@point.x] + ', ' + @point.y.to_s + ')'
      print ' ↓******' + "\n"
    end
    puts '  a b c d e f g h '
    puts ' ┌─┬─┬─┬─┬─┬─┬─┬─┐'

    i = 1
    p_board = @board[1..8]

    p_board.each{|x_line|
      print i.to_s + '|'
      i = i + 1
      x_line.each{|v|
        print '○' + '|' if v == 'B'
        print '●' + '|' if v == 'W'
        print ' ' + '|' if v == 'E'
      }
      print "\n"
    }

    puts ' └─┴─┴─┴─┴─┴─┴─┴─┘'
  end
end
